{"version":3,"sources":["Numbers.js","Filter.js","Person.js","Comm.js","Notification.js","App.js","index.js"],"names":["Person","p","dc","name","number","id","onClick","Printpersons","persons","map","key","Numbers","props","deleteContact","Filter","value","filtervalue","onChange","changeFunction","onSubmit","submitPerson","nameValue","nameChange","numValue","numChange","type","baseURL","axios","get","then","response","data","newContact","post","contactInfo","put","delete","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilter","notmsg","setNotificationMessage","useEffect","console","log","Comm","contactsData","event","target","preventDefault","filter","toLowerCase","length","window","confirm","newCopy","setTimeout","copy","push","catch","error","person","match","RegExp","contactToDelete","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.647f327b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Numbers = (props) => {\n    return (\n      <div>\n        <Printpersons persons={props.persons} dc={props.deleteContact} />\n      </div>\n    )\n}\n\nconst Person = ({p,dc}) => {\n        return(\n                <p>{p.name} {p.number} <button id={p.id} onClick={dc}>delete</button></p>\n        )\n}\n\nconst Printpersons = ({persons,dc}) => persons.map(p => <Person p={p} key={p.name} dc={dc} />)\n\nexport default Numbers\n","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n\t<div>\n           filter shown with: <input value={props.filtervalue} onChange={props.changeFunction} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Person = (props) => {\n    return (\n\t<form onSubmit={props.submitPerson}>\n        \t<div>\n          \t\tname: <input value={props.nameValue} onChange={props.nameChange} />\n       \t\t</div>\n        \t<div>\n        \t\tnumber: <input value={props.numValue} onChange={props.numChange} />\n        \t</div>\n        \t<div>\n          \t\t<button type=\"submit\">add</button>\n        \t</div>\n\t</form>\n    )\n}\n\nexport default Person\n","import axios from 'axios'\n\n//const baseURL = 'http://192.168.56.99:3001/api/persons'\n//const baseURL = 'http://localhost:3001/api/persons'\n//const baseURL = 'https://glacial-badlands-79242.herokuapp.com/api/persons'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseURL)\n\treturn request.then(response => response.data)\n}\n\nconst create = newContact => {\n\tconst request = axios.post(baseURL, newContact)\n\treturn request.then(response => response.data)\n}\n\nconst update = (id, contactInfo) => {\n\tconst request = axios.put(`${baseURL}/${id}`, contactInfo)\n\treturn request.then(response => response.data)\n}\n\nconst delContact = id => {\n\tconst request = axios.delete(`${baseURL}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nexport default {\n\tgetAll: getAll,\n\tcreate: create,\n\tupdate: update,\n\tdelContact: delContact\n}\n","import React from 'react'\n\nconst Notification = (props) => {\n    if (props.message === null){\n\t    return null\n    }\n    return (\n        <div className={props.type}>\n\t    {props.message}\n       \t</div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Numbers from './Numbers'\nimport Filter from './Filter'\nimport Person from './Person'\nimport Comm from './Comm'\nimport Notification from './Notification'\n\nconst App = (props) => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setFilter ] = useState('')\n  const [ notmsg, setNotificationMessage ] = useState({\"message\": null, \"type\": \"errornotification\"})\n\n  const effectHook = () => {\n\t  console.log(\"Running Effect Hook\")\n\t  Comm.getAll().then(contactsData => {\n\t\tconsole.log('Response received')\n\t\tsetPersons(contactsData)\n\t    })\n  }\n\n  useEffect(effectHook,[])\n\n  const addNumber = (event) => {\n\t  event.preventDefault()\n\t  if(newName !== '' && newNumber !== '' ){\n\t\t  if (persons.filter( function(p){return p.name.toLowerCase() === newName.toLowerCase() }).length >0 ){\n\t\t    if(window.confirm(newName+' is already added to the phonebook, replace the old number with a new one?')){\n\t\t    \tvar contactInfo\n\t\t    \tvar newCopy = persons.map((p) => {\n\t\t\t    if(p.name===newName){\n\t\t\t\t    contactInfo = {\"name\": p.name, \"number\": newNumber, \"id\": p.id}\n\t\t\t\t    return(contactInfo)\n\t\t\t    }\n\t\t\t    else {\n\t\t\t\t    return({\"name\": p.name, \"number\": p.number, \"id\": p.id})\n\t\t\t    }\n\t\t    \t})\n\t\t    \t\n\t\t\t\tComm.update(contactInfo.id, {\"name\": contactInfo.name, \"number\": contactInfo.number}).then(response => {\n\t\t\t    \tsetPersons(newCopy)\n\t\t\t    \tsetNewName('')\n\t\t\t    \tsetNewNumber('')\n\t\t    \t})\n\t\t\t\t.then( () => {\n                \tsetNotificationMessage({\"message\": `Contact '${newName}' has been updated`, \"type\": \"notification\"})\n                \tsetTimeout( () => {\n                    \tsetNotificationMessage({\"message\": null, \"type\": \"errornotification\"})\n                \t},3000)\n            \t})\n\t\t    }\n\t\t    else {\n\t\t\t    setNewName('')\n\t\t\t    setNewNumber('')\n\t\t    }\n\t\t  }\n\t\t  else {\n\t\t    var copy = [...persons]\n\t\t    //var currMaxId = Math.max.apply(Math, copy.map((p) => p.id))\n\t\t    //copy.push({name: newName, number: newNumber, id: currMaxId+1})\n        \tComm.create({name: newName, number: newNumber}).then(response => {\n\t\t\t\tcopy.push({name: newName, number: newNumber, id: response.id})\n            \tsetPersons(copy)\n            \tsetNewName('')\n            \tsetNewNumber('')\n            })\n\t\t    .then( () => {\n                setNotificationMessage({\"message\": `Contact '${newName}' has been created`, \"type\": \"notification\"})\n                setTimeout( () => {\n                        setNotificationMessage({\"message\": null, \"type\": \"errornotification\"})\n                },3000)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error.response.data)\n\t\t\t\tsetNotificationMessage({\"message\": `Phone validation failed: '${error.response.data.error}'`, \"type\": \"errornotification\"})\n                setTimeout( () => {\n                        setNotificationMessage({\"message\": null, \"type\": \"errornotification\"})\n                },3000)\n\t\t\t})\n\t\t  }\n\t  }\n  }\n\n  const handleInputChange = (event) => {\n\t  setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n\t  setNewNumber(event.target.value)\n  }\n  \n  const handleFilter = (event) => {\n\t  setFilter(event.target.value)\n  }\n\n  const handleDelete = (event) => {\n\t  var contactToDelete = persons.filter((p) => p.id===event.target.id)\n\t  if(contactToDelete.length>0){\n\t  \tif(window.confirm('Delete ' + contactToDelete[0].name + '?')) {\n\t\t  var copy = persons.filter( (p) => p.id!==event.target.id)\n\t\t  Comm.delContact(contactToDelete[0].id).then(response => {\n\t\t\t  setNewName('')\n\t\t\t  setNewNumber('')\n\t\t\t  //setPersons(copy)\n\t\t  \t  })\n\t\t\t  .then( () => {\n                                  setNotificationMessage({\"message\": `Contact '${contactToDelete[0].name}' has been deleted`, \"type\": \"notification\"})\n                                  setTimeout( () => {\n                                          setNotificationMessage({\"message\": null, \"type\": \"errornotification\"})\n                                  },3000)\n                          })\n\t\t\t  .catch(error => {\n\t\t\t\t  setNotificationMessage({\"message\": `Information of '${contactToDelete[0].name}' has already been removed from server`, \"type\": \"errornotification\"})\n\t\t\t\t  setTimeout( () => {\n\t\t\t\t\t  setNotificationMessage({\"message\": null, \"type\": \"errornotification\"})\n\t\t\t\t  },3000)\n\t\t\t  })\n\t\t\t  .finally( () => {\n\t\t\t\t  setPersons(copy)\n\t\t\t  })\n\t  \t}\n\t  }\n  }\n\n  return (\n    <div>\n      <Notification message={notmsg.message} type={notmsg.type} />\n      <h2>Phonebook</h2>\n      <Filter changeFunction={handleFilter} filtervalue={newFilter} />\n      <h2>add a new</h2>\n      <Person nameValue={newName} nameChange={handleInputChange} numValue={newNumber} numChange={handleNumberChange} submitPerson={addNumber} />\n      <h2>Numbers</h2>\n      <Numbers persons={persons.filter(person => person.name.match(RegExp(\"^\"+newFilter+\".*\",\"i\")))} deleteContact={handleDelete} />\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}